// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file v1/operations.proto (package v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { BackupProgressEntry, BackupProgressError, RepoStats, ResticSnapshot, RestoreProgressEntry } from "./restic_pb";
import { file_v1_restic } from "./restic_pb";
import type { Hook_Condition, RetentionPolicy } from "./config_pb";
import { file_v1_config } from "./config_pb";
import type { Empty, Int64List } from "../types/value_pb";
import { file_types_value } from "../types/value_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file v1/operations.proto.
 */
export const file_v1_operations: GenFile = /*@__PURE__*/
  fileDesc("ChN2MS9vcGVyYXRpb25zLnByb3RvEgJ2MSIyCg1PcGVyYXRpb25MaXN0EiEKCm9wZXJhdGlvbnMYASADKAsyDS52MS5PcGVyYXRpb24ijAYKCU9wZXJhdGlvbhIKCgJpZBgBIAEoAxITCgtvcmlnaW5hbF9pZBgNIAEoAxINCgVtb2RubxgMIAEoAxIPCgdmbG93X2lkGAogASgDEhgKEG9yaWdpbmFsX2Zsb3dfaWQYDiABKAMSDwoHcmVwb19pZBgCIAEoCRIPCgdwbGFuX2lkGAMgASgJEhMKC2luc3RhbmNlX2lkGAsgASgJEhMKC3NuYXBzaG90X2lkGAggASgJEiMKBnN0YXR1cxgEIAEoDjITLnYxLk9wZXJhdGlvblN0YXR1cxIaChJ1bml4X3RpbWVfc3RhcnRfbXMYBSABKAMSGAoQdW5peF90aW1lX2VuZF9tcxgGIAEoAxIXCg9kaXNwbGF5X21lc3NhZ2UYByABKAkSDgoGbG9ncmVmGAkgASgJEi8KEG9wZXJhdGlvbl9iYWNrdXAYZCABKAsyEy52MS5PcGVyYXRpb25CYWNrdXBIABI+ChhvcGVyYXRpb25faW5kZXhfc25hcHNob3QYZSABKAsyGi52MS5PcGVyYXRpb25JbmRleFNuYXBzaG90SAASLwoQb3BlcmF0aW9uX2ZvcmdldBhmIAEoCzITLnYxLk9wZXJhdGlvbkZvcmdldEgAEi0KD29wZXJhdGlvbl9wcnVuZRhnIAEoCzISLnYxLk9wZXJhdGlvblBydW5lSAASMQoRb3BlcmF0aW9uX3Jlc3RvcmUYaCABKAsyFC52MS5PcGVyYXRpb25SZXN0b3JlSAASLQoPb3BlcmF0aW9uX3N0YXRzGGkgASgLMhIudjEuT3BlcmF0aW9uU3RhdHNIABIyChJvcGVyYXRpb25fcnVuX2hvb2sYaiABKAsyFC52MS5PcGVyYXRpb25SdW5Ib29rSAASLQoPb3BlcmF0aW9uX2NoZWNrGGsgASgLMhIudjEuT3BlcmF0aW9uQ2hlY2tIABI4ChVvcGVyYXRpb25fcnVuX2NvbW1hbmQYbCABKAsyFy52MS5PcGVyYXRpb25SdW5Db21tYW5kSABCBAoCb3AizwEKDk9wZXJhdGlvbkV2ZW50EiIKCmtlZXBfYWxpdmUYASABKAsyDC50eXBlcy5FbXB0eUgAEi8KEmNyZWF0ZWRfb3BlcmF0aW9ucxgCIAEoCzIRLnYxLk9wZXJhdGlvbkxpc3RIABIvChJ1cGRhdGVkX29wZXJhdGlvbnMYAyABKAsyES52MS5PcGVyYXRpb25MaXN0SAASLgoSZGVsZXRlZF9vcGVyYXRpb25zGAQgASgLMhAudHlwZXMuSW50NjRMaXN0SABCBwoFZXZlbnQiaAoPT3BlcmF0aW9uQmFja3VwEiwKC2xhc3Rfc3RhdHVzGAMgASgLMhcudjEuQmFja3VwUHJvZ3Jlc3NFbnRyeRInCgZlcnJvcnMYBCADKAsyFy52MS5CYWNrdXBQcm9ncmVzc0Vycm9yIk4KFk9wZXJhdGlvbkluZGV4U25hcHNob3QSJAoIc25hcHNob3QYAiABKAsyEi52MS5SZXN0aWNTbmFwc2hvdBIOCgZmb3Jnb3QYAyABKAgiWgoPT3BlcmF0aW9uRm9yZ2V0EiIKBmZvcmdldBgBIAMoCzISLnYxLlJlc3RpY1NuYXBzaG90EiMKBnBvbGljeRgCIAEoCzITLnYxLlJldGVudGlvblBvbGljeSI7Cg5PcGVyYXRpb25QcnVuZRISCgZvdXRwdXQYASABKAlCAhgBEhUKDW91dHB1dF9sb2dyZWYYAiABKAkiOwoOT3BlcmF0aW9uQ2hlY2sSEgoGb3V0cHV0GAEgASgJQgIYARIVCg1vdXRwdXRfbG9ncmVmGAIgASgJIlgKE09wZXJhdGlvblJ1bkNvbW1hbmQSDwoHY29tbWFuZBgBIAEoCRIVCg1vdXRwdXRfbG9ncmVmGAIgASgJEhkKEW91dHB1dF9zaXplX2J5dGVzGAMgASgDIl8KEE9wZXJhdGlvblJlc3RvcmUSDAoEcGF0aBgBIAEoCRIOCgZ0YXJnZXQYAiABKAkSLQoLbGFzdF9zdGF0dXMYAyABKAsyGC52MS5SZXN0b3JlUHJvZ3Jlc3NFbnRyeSIuCg5PcGVyYXRpb25TdGF0cxIcCgVzdGF0cxgBIAEoCzINLnYxLlJlcG9TdGF0cyJxChBPcGVyYXRpb25SdW5Ib29rEhEKCXBhcmVudF9vcBgEIAEoAxIMCgRuYW1lGAEgASgJEhUKDW91dHB1dF9sb2dyZWYYAiABKAkSJQoJY29uZGl0aW9uGAMgASgOMhIudjEuSG9vay5Db25kaXRpb24qYAoST3BlcmF0aW9uRXZlbnRUeXBlEhEKDUVWRU5UX1VOS05PV04QABIRCg1FVkVOVF9DUkVBVEVEEAESEQoNRVZFTlRfVVBEQVRFRBACEhEKDUVWRU5UX0RFTEVURUQQAyrCAQoPT3BlcmF0aW9uU3RhdHVzEhIKDlNUQVRVU19VTktOT1dOEAASEgoOU1RBVFVTX1BFTkRJTkcQARIVChFTVEFUVVNfSU5QUk9HUkVTUxACEhIKDlNUQVRVU19TVUNDRVNTEAMSEgoOU1RBVFVTX1dBUk5JTkcQBxIQCgxTVEFUVVNfRVJST1IQBBIbChdTVEFUVVNfU1lTVEVNX0NBTkNFTExFRBAFEhkKFVNUQVRVU19VU0VSX0NBTkNFTExFRBAGQixaKmdpdGh1Yi5jb20vZ2FyZXRoZ2VvcmdlL2JhY2tyZXN0L2dlbi9nby92MWIGcHJvdG8z", [file_v1_restic, file_v1_config, file_types_value]);

/**
 * @generated from message v1.OperationList
 */
export type OperationList = Message<"v1.OperationList"> & {
  /**
   * @generated from field: repeated v1.Operation operations = 1;
   */
  operations: Operation[];
};

/**
 * Describes the message v1.OperationList.
 * Use `create(OperationListSchema)` to create a new message.
 */
export const OperationListSchema: GenMessage<OperationList> = /*@__PURE__*/
  messageDesc(file_v1_operations, 0);

/**
 * @generated from message v1.Operation
 */
export type Operation = Message<"v1.Operation"> & {
  /**
   * required, primary ID of the operation. ID is sequential based on creation time of the operation.
   *
   * @generated from field: int64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: int64 original_id = 13;
   */
  originalId: bigint;

  /**
   * modno increments with each change to the operation. This supports easy diffing.
   *
   * @generated from field: int64 modno = 12;
   */
  modno: bigint;

  /**
   * flow id groups operations together, e.g. by an execution of a plan.
   * must be unique within the context of a repo.
   *
   * @generated from field: int64 flow_id = 10;
   */
  flowId: bigint;

  /**
   * @generated from field: int64 original_flow_id = 14;
   */
  originalFlowId: bigint;

  /**
   * repo id and repo provider id are the repo that the operation belongs to
   * and the instance that provides the repo's configuration respectively.
   *
   * @generated from field: string repo_id = 2;
   */
  repoId: string;

  /**
   * plan id e.g. a scheduled set of operations (or system) that created this operation.
   *
   * @generated from field: string plan_id = 3;
   */
  planId: string;

  /**
   * instance ID that created the operation
   *
   * @generated from field: string instance_id = 11;
   */
  instanceId: string;

  /**
   * optional snapshot id if associated with a snapshot.
   *
   * @generated from field: string snapshot_id = 8;
   */
  snapshotId: string;

  /**
   * @generated from field: v1.OperationStatus status = 4;
   */
  status: OperationStatus;

  /**
   * required, unix time in milliseconds of the operation's creation (ID is derived from this)
   *
   * @generated from field: int64 unix_time_start_ms = 5;
   */
  unixTimeStartMs: bigint;

  /**
   * ptional, unix time in milliseconds of the operation's completion
   *
   * @generated from field: int64 unix_time_end_ms = 6;
   */
  unixTimeEndMs: bigint;

  /**
   * optional, human readable context message, typically an error message.
   *
   * @generated from field: string display_message = 7;
   */
  displayMessage: string;

  /**
   * logref can point to arbitrary logs associated with the operation.
   *
   * @generated from field: string logref = 9;
   */
  logref: string;

  /**
   * @generated from oneof v1.Operation.op
   */
  op: {
    /**
     * @generated from field: v1.OperationBackup operation_backup = 100;
     */
    value: OperationBackup;
    case: "operationBackup";
  } | {
    /**
     * @generated from field: v1.OperationIndexSnapshot operation_index_snapshot = 101;
     */
    value: OperationIndexSnapshot;
    case: "operationIndexSnapshot";
  } | {
    /**
     * @generated from field: v1.OperationForget operation_forget = 102;
     */
    value: OperationForget;
    case: "operationForget";
  } | {
    /**
     * @generated from field: v1.OperationPrune operation_prune = 103;
     */
    value: OperationPrune;
    case: "operationPrune";
  } | {
    /**
     * @generated from field: v1.OperationRestore operation_restore = 104;
     */
    value: OperationRestore;
    case: "operationRestore";
  } | {
    /**
     * @generated from field: v1.OperationStats operation_stats = 105;
     */
    value: OperationStats;
    case: "operationStats";
  } | {
    /**
     * @generated from field: v1.OperationRunHook operation_run_hook = 106;
     */
    value: OperationRunHook;
    case: "operationRunHook";
  } | {
    /**
     * @generated from field: v1.OperationCheck operation_check = 107;
     */
    value: OperationCheck;
    case: "operationCheck";
  } | {
    /**
     * @generated from field: v1.OperationRunCommand operation_run_command = 108;
     */
    value: OperationRunCommand;
    case: "operationRunCommand";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message v1.Operation.
 * Use `create(OperationSchema)` to create a new message.
 */
export const OperationSchema: GenMessage<Operation> = /*@__PURE__*/
  messageDesc(file_v1_operations, 1);

/**
 * OperationEvent is used in the wireformat to stream operation changes to clients
 *
 * @generated from message v1.OperationEvent
 */
export type OperationEvent = Message<"v1.OperationEvent"> & {
  /**
   * @generated from oneof v1.OperationEvent.event
   */
  event: {
    /**
     * @generated from field: types.Empty keep_alive = 1;
     */
    value: Empty;
    case: "keepAlive";
  } | {
    /**
     * @generated from field: v1.OperationList created_operations = 2;
     */
    value: OperationList;
    case: "createdOperations";
  } | {
    /**
     * @generated from field: v1.OperationList updated_operations = 3;
     */
    value: OperationList;
    case: "updatedOperations";
  } | {
    /**
     * @generated from field: types.Int64List deleted_operations = 4;
     */
    value: Int64List;
    case: "deletedOperations";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message v1.OperationEvent.
 * Use `create(OperationEventSchema)` to create a new message.
 */
export const OperationEventSchema: GenMessage<OperationEvent> = /*@__PURE__*/
  messageDesc(file_v1_operations, 2);

/**
 * @generated from message v1.OperationBackup
 */
export type OperationBackup = Message<"v1.OperationBackup"> & {
  /**
   * @generated from field: v1.BackupProgressEntry last_status = 3;
   */
  lastStatus?: BackupProgressEntry;

  /**
   * @generated from field: repeated v1.BackupProgressError errors = 4;
   */
  errors: BackupProgressError[];
};

/**
 * Describes the message v1.OperationBackup.
 * Use `create(OperationBackupSchema)` to create a new message.
 */
export const OperationBackupSchema: GenMessage<OperationBackup> = /*@__PURE__*/
  messageDesc(file_v1_operations, 3);

/**
 * OperationIndexSnapshot tracks that a snapshot was detected by backrest. 
 *
 * @generated from message v1.OperationIndexSnapshot
 */
export type OperationIndexSnapshot = Message<"v1.OperationIndexSnapshot"> & {
  /**
   * the snapshot that was indexed.
   *
   * @generated from field: v1.ResticSnapshot snapshot = 2;
   */
  snapshot?: ResticSnapshot;

  /**
   * tracks whether this snapshot is forgotten yet.
   *
   * @generated from field: bool forgot = 3;
   */
  forgot: boolean;
};

/**
 * Describes the message v1.OperationIndexSnapshot.
 * Use `create(OperationIndexSnapshotSchema)` to create a new message.
 */
export const OperationIndexSnapshotSchema: GenMessage<OperationIndexSnapshot> = /*@__PURE__*/
  messageDesc(file_v1_operations, 4);

/**
 * OperationForget tracks a forget operation.
 *
 * @generated from message v1.OperationForget
 */
export type OperationForget = Message<"v1.OperationForget"> & {
  /**
   * @generated from field: repeated v1.ResticSnapshot forget = 1;
   */
  forget: ResticSnapshot[];

  /**
   * @generated from field: v1.RetentionPolicy policy = 2;
   */
  policy?: RetentionPolicy;
};

/**
 * Describes the message v1.OperationForget.
 * Use `create(OperationForgetSchema)` to create a new message.
 */
export const OperationForgetSchema: GenMessage<OperationForget> = /*@__PURE__*/
  messageDesc(file_v1_operations, 5);

/**
 * OperationPrune tracks a prune operation.
 *
 * @generated from message v1.OperationPrune
 */
export type OperationPrune = Message<"v1.OperationPrune"> & {
  /**
   * output of the prune.
   *
   * @generated from field: string output = 1 [deprecated = true];
   * @deprecated
   */
  output: string;

  /**
   * logref of the prune output.
   *
   * @generated from field: string output_logref = 2;
   */
  outputLogref: string;
};

/**
 * Describes the message v1.OperationPrune.
 * Use `create(OperationPruneSchema)` to create a new message.
 */
export const OperationPruneSchema: GenMessage<OperationPrune> = /*@__PURE__*/
  messageDesc(file_v1_operations, 6);

/**
 * OperationCheck tracks a check operation.
 *
 * @generated from message v1.OperationCheck
 */
export type OperationCheck = Message<"v1.OperationCheck"> & {
  /**
   * output of the check operation.
   *
   * @generated from field: string output = 1 [deprecated = true];
   * @deprecated
   */
  output: string;

  /**
   * logref of the check output.
   *
   * @generated from field: string output_logref = 2;
   */
  outputLogref: string;
};

/**
 * Describes the message v1.OperationCheck.
 * Use `create(OperationCheckSchema)` to create a new message.
 */
export const OperationCheckSchema: GenMessage<OperationCheck> = /*@__PURE__*/
  messageDesc(file_v1_operations, 7);

/**
 * OperationRunCommand tracks a long running command. Commands are grouped into a flow ID for each session.
 *
 * @generated from message v1.OperationRunCommand
 */
export type OperationRunCommand = Message<"v1.OperationRunCommand"> & {
  /**
   * @generated from field: string command = 1;
   */
  command: string;

  /**
   * @generated from field: string output_logref = 2;
   */
  outputLogref: string;

  /**
   * not necessarily authoritative, tracked as an optimization to allow clients to avoid fetching very large outputs.
   *
   * @generated from field: int64 output_size_bytes = 3;
   */
  outputSizeBytes: bigint;
};

/**
 * Describes the message v1.OperationRunCommand.
 * Use `create(OperationRunCommandSchema)` to create a new message.
 */
export const OperationRunCommandSchema: GenMessage<OperationRunCommand> = /*@__PURE__*/
  messageDesc(file_v1_operations, 8);

/**
 * OperationRestore tracks a restore operation.
 *
 * @generated from message v1.OperationRestore
 */
export type OperationRestore = Message<"v1.OperationRestore"> & {
  /**
   * path in the snapshot to restore.
   *
   * @generated from field: string path = 1;
   */
  path: string;

  /**
   * location to restore it to.
   *
   * @generated from field: string target = 2;
   */
  target: string;

  /**
   * status of the restore.
   *
   * @generated from field: v1.RestoreProgressEntry last_status = 3;
   */
  lastStatus?: RestoreProgressEntry;
};

/**
 * Describes the message v1.OperationRestore.
 * Use `create(OperationRestoreSchema)` to create a new message.
 */
export const OperationRestoreSchema: GenMessage<OperationRestore> = /*@__PURE__*/
  messageDesc(file_v1_operations, 9);

/**
 * OperationStats tracks a stats operation.
 *
 * @generated from message v1.OperationStats
 */
export type OperationStats = Message<"v1.OperationStats"> & {
  /**
   * @generated from field: v1.RepoStats stats = 1;
   */
  stats?: RepoStats;
};

/**
 * Describes the message v1.OperationStats.
 * Use `create(OperationStatsSchema)` to create a new message.
 */
export const OperationStatsSchema: GenMessage<OperationStats> = /*@__PURE__*/
  messageDesc(file_v1_operations, 10);

/**
 * OperationRunHook tracks a hook that was run.
 *
 * @generated from message v1.OperationRunHook
 */
export type OperationRunHook = Message<"v1.OperationRunHook"> & {
  /**
   * ID of the operation that ran the hook.
   *
   * @generated from field: int64 parent_op = 4;
   */
  parentOp: bigint;

  /**
   * description of the hook that was run. typically repo/hook_idx or plan/hook_idx.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * logref of the hook's output. DEPRECATED.
   *
   * @generated from field: string output_logref = 2;
   */
  outputLogref: string;

  /**
   * triggering condition of the hook.
   *
   * @generated from field: v1.Hook.Condition condition = 3;
   */
  condition: Hook_Condition;
};

/**
 * Describes the message v1.OperationRunHook.
 * Use `create(OperationRunHookSchema)` to create a new message.
 */
export const OperationRunHookSchema: GenMessage<OperationRunHook> = /*@__PURE__*/
  messageDesc(file_v1_operations, 11);

/**
 * OperationEventType indicates whether the operation was created or updated
 *
 * @generated from enum v1.OperationEventType
 */
export enum OperationEventType {
  /**
   * @generated from enum value: EVENT_UNKNOWN = 0;
   */
  EVENT_UNKNOWN = 0,

  /**
   * @generated from enum value: EVENT_CREATED = 1;
   */
  EVENT_CREATED = 1,

  /**
   * @generated from enum value: EVENT_UPDATED = 2;
   */
  EVENT_UPDATED = 2,

  /**
   * @generated from enum value: EVENT_DELETED = 3;
   */
  EVENT_DELETED = 3,
}

/**
 * Describes the enum v1.OperationEventType.
 */
export const OperationEventTypeSchema: GenEnum<OperationEventType> = /*@__PURE__*/
  enumDesc(file_v1_operations, 0);

/**
 * @generated from enum v1.OperationStatus
 */
export enum OperationStatus {
  /**
   * used to indicate that the status is unknown.
   *
   * @generated from enum value: STATUS_UNKNOWN = 0;
   */
  STATUS_UNKNOWN = 0,

  /**
   * used to indicate that the operation is pending.
   *
   * @generated from enum value: STATUS_PENDING = 1;
   */
  STATUS_PENDING = 1,

  /**
   * used to indicate that the operation is in progress.
   *
   * @generated from enum value: STATUS_INPROGRESS = 2;
   */
  STATUS_INPROGRESS = 2,

  /**
   * used to indicate that the operation completed successfully.
   *
   * @generated from enum value: STATUS_SUCCESS = 3;
   */
  STATUS_SUCCESS = 3,

  /**
   * used to indicate that the operation completed with warnings.
   *
   * @generated from enum value: STATUS_WARNING = 7;
   */
  STATUS_WARNING = 7,

  /**
   * used to indicate that the operation failed.
   *
   * @generated from enum value: STATUS_ERROR = 4;
   */
  STATUS_ERROR = 4,

  /**
   * indicates operation cancelled by the system.
   *
   * @generated from enum value: STATUS_SYSTEM_CANCELLED = 5;
   */
  STATUS_SYSTEM_CANCELLED = 5,

  /**
   * indicates operation cancelled by the user.
   *
   * @generated from enum value: STATUS_USER_CANCELLED = 6;
   */
  STATUS_USER_CANCELLED = 6,
}

/**
 * Describes the enum v1.OperationStatus.
 */
export const OperationStatusSchema: GenEnum<OperationStatus> = /*@__PURE__*/
  enumDesc(file_v1_operations, 1);

